package legend.core.platform;

import legend.core.platform.input.InputAxis;
import legend.core.platform.input.InputButton;
import legend.core.platform.input.InputKey;
import legend.core.platform.input.InputMod;
import org.lwjgl.sdl.SDL_KeyboardEvent;

import java.util.Set;

import static legend.core.platform.input.InputAxis.LEFT_X;
import static legend.core.platform.input.InputAxis.LEFT_Y;
import static legend.core.platform.input.InputAxis.RIGHT_X;
import static legend.core.platform.input.InputAxis.RIGHT_Y;
import static org.lwjgl.sdl.SDLGamepad.SDL_GAMEPAD_AXIS_LEFTX;
import static org.lwjgl.sdl.SDLGamepad.SDL_GAMEPAD_AXIS_LEFTY;
import static org.lwjgl.sdl.SDLGamepad.SDL_GAMEPAD_AXIS_LEFT_TRIGGER;
import static org.lwjgl.sdl.SDLGamepad.SDL_GAMEPAD_AXIS_RIGHTX;
import static org.lwjgl.sdl.SDLGamepad.SDL_GAMEPAD_AXIS_RIGHTY;
import static org.lwjgl.sdl.SDLGamepad.SDL_GAMEPAD_AXIS_RIGHT_TRIGGER;
import static org.lwjgl.sdl.SDLGamepad.SDL_GAMEPAD_BUTTON_BACK;
import static org.lwjgl.sdl.SDLGamepad.SDL_GAMEPAD_BUTTON_DPAD_DOWN;
import static org.lwjgl.sdl.SDLGamepad.SDL_GAMEPAD_BUTTON_DPAD_LEFT;
import static org.lwjgl.sdl.SDLGamepad.SDL_GAMEPAD_BUTTON_DPAD_RIGHT;
import static org.lwjgl.sdl.SDLGamepad.SDL_GAMEPAD_BUTTON_DPAD_UP;
import static org.lwjgl.sdl.SDLGamepad.SDL_GAMEPAD_BUTTON_EAST;
import static org.lwjgl.sdl.SDLGamepad.SDL_GAMEPAD_BUTTON_LEFT_SHOULDER;
import static org.lwjgl.sdl.SDLGamepad.SDL_GAMEPAD_BUTTON_LEFT_STICK;
import static org.lwjgl.sdl.SDLGamepad.SDL_GAMEPAD_BUTTON_NORTH;
import static org.lwjgl.sdl.SDLGamepad.SDL_GAMEPAD_BUTTON_RIGHT_SHOULDER;
import static org.lwjgl.sdl.SDLGamepad.SDL_GAMEPAD_BUTTON_RIGHT_STICK;
import static org.lwjgl.sdl.SDLGamepad.SDL_GAMEPAD_BUTTON_SOUTH;
import static org.lwjgl.sdl.SDLGamepad.SDL_GAMEPAD_BUTTON_START;
import static org.lwjgl.sdl.SDLGamepad.SDL_GAMEPAD_BUTTON_WEST;
import static org.lwjgl.sdl.SDLKeycode.SDLK_0;
import static org.lwjgl.sdl.SDLKeycode.SDLK_1;
import static org.lwjgl.sdl.SDLKeycode.SDLK_2;
import static org.lwjgl.sdl.SDLKeycode.SDLK_3;
import static org.lwjgl.sdl.SDLKeycode.SDLK_4;
import static org.lwjgl.sdl.SDLKeycode.SDLK_5;
import static org.lwjgl.sdl.SDLKeycode.SDLK_6;
import static org.lwjgl.sdl.SDLKeycode.SDLK_7;
import static org.lwjgl.sdl.SDLKeycode.SDLK_8;
import static org.lwjgl.sdl.SDLKeycode.SDLK_9;
import static org.lwjgl.sdl.SDLKeycode.SDLK_A;
import static org.lwjgl.sdl.SDLKeycode.SDLK_AMPERSAND;
import static org.lwjgl.sdl.SDLKeycode.SDLK_APOSTROPHE;
import static org.lwjgl.sdl.SDLKeycode.SDLK_ASTERISK;
import static org.lwjgl.sdl.SDLKeycode.SDLK_AT;
import static org.lwjgl.sdl.SDLKeycode.SDLK_B;
import static org.lwjgl.sdl.SDLKeycode.SDLK_BACKSLASH;
import static org.lwjgl.sdl.SDLKeycode.SDLK_BACKSPACE;
import static org.lwjgl.sdl.SDLKeycode.SDLK_C;
import static org.lwjgl.sdl.SDLKeycode.SDLK_CARET;
import static org.lwjgl.sdl.SDLKeycode.SDLK_COLON;
import static org.lwjgl.sdl.SDLKeycode.SDLK_COMMA;
import static org.lwjgl.sdl.SDLKeycode.SDLK_D;
import static org.lwjgl.sdl.SDLKeycode.SDLK_DBLAPOSTROPHE;
import static org.lwjgl.sdl.SDLKeycode.SDLK_DELETE;
import static org.lwjgl.sdl.SDLKeycode.SDLK_DOLLAR;
import static org.lwjgl.sdl.SDLKeycode.SDLK_DOWN;
import static org.lwjgl.sdl.SDLKeycode.SDLK_E;
import static org.lwjgl.sdl.SDLKeycode.SDLK_END;
import static org.lwjgl.sdl.SDLKeycode.SDLK_EQUALS;
import static org.lwjgl.sdl.SDLKeycode.SDLK_ESCAPE;
import static org.lwjgl.sdl.SDLKeycode.SDLK_EXCLAIM;
import static org.lwjgl.sdl.SDLKeycode.SDLK_F;
import static org.lwjgl.sdl.SDLKeycode.SDLK_F1;
import static org.lwjgl.sdl.SDLKeycode.SDLK_F10;
import static org.lwjgl.sdl.SDLKeycode.SDLK_F11;
import static org.lwjgl.sdl.SDLKeycode.SDLK_F12;
import static org.lwjgl.sdl.SDLKeycode.SDLK_F13;
import static org.lwjgl.sdl.SDLKeycode.SDLK_F14;
import static org.lwjgl.sdl.SDLKeycode.SDLK_F15;
import static org.lwjgl.sdl.SDLKeycode.SDLK_F16;
import static org.lwjgl.sdl.SDLKeycode.SDLK_F17;
import static org.lwjgl.sdl.SDLKeycode.SDLK_F18;
import static org.lwjgl.sdl.SDLKeycode.SDLK_F19;
import static org.lwjgl.sdl.SDLKeycode.SDLK_F2;
import static org.lwjgl.sdl.SDLKeycode.SDLK_F20;
import static org.lwjgl.sdl.SDLKeycode.SDLK_F21;
import static org.lwjgl.sdl.SDLKeycode.SDLK_F22;
import static org.lwjgl.sdl.SDLKeycode.SDLK_F23;
import static org.lwjgl.sdl.SDLKeycode.SDLK_F24;
import static org.lwjgl.sdl.SDLKeycode.SDLK_F3;
import static org.lwjgl.sdl.SDLKeycode.SDLK_F4;
import static org.lwjgl.sdl.SDLKeycode.SDLK_F5;
import static org.lwjgl.sdl.SDLKeycode.SDLK_F6;
import static org.lwjgl.sdl.SDLKeycode.SDLK_F7;
import static org.lwjgl.sdl.SDLKeycode.SDLK_F8;
import static org.lwjgl.sdl.SDLKeycode.SDLK_F9;
import static org.lwjgl.sdl.SDLKeycode.SDLK_G;
import static org.lwjgl.sdl.SDLKeycode.SDLK_GRAVE;
import static org.lwjgl.sdl.SDLKeycode.SDLK_GREATER;
import static org.lwjgl.sdl.SDLKeycode.SDLK_H;
import static org.lwjgl.sdl.SDLKeycode.SDLK_HASH;
import static org.lwjgl.sdl.SDLKeycode.SDLK_HOME;
import static org.lwjgl.sdl.SDLKeycode.SDLK_I;
import static org.lwjgl.sdl.SDLKeycode.SDLK_INSERT;
import static org.lwjgl.sdl.SDLKeycode.SDLK_J;
import static org.lwjgl.sdl.SDLKeycode.SDLK_K;
import static org.lwjgl.sdl.SDLKeycode.SDLK_KP_0;
import static org.lwjgl.sdl.SDLKeycode.SDLK_KP_1;
import static org.lwjgl.sdl.SDLKeycode.SDLK_KP_2;
import static org.lwjgl.sdl.SDLKeycode.SDLK_KP_3;
import static org.lwjgl.sdl.SDLKeycode.SDLK_KP_4;
import static org.lwjgl.sdl.SDLKeycode.SDLK_KP_5;
import static org.lwjgl.sdl.SDLKeycode.SDLK_KP_6;
import static org.lwjgl.sdl.SDLKeycode.SDLK_KP_7;
import static org.lwjgl.sdl.SDLKeycode.SDLK_KP_8;
import static org.lwjgl.sdl.SDLKeycode.SDLK_KP_9;
import static org.lwjgl.sdl.SDLKeycode.SDLK_KP_DIVIDE;
import static org.lwjgl.sdl.SDLKeycode.SDLK_KP_ENTER;
import static org.lwjgl.sdl.SDLKeycode.SDLK_KP_EQUALS;
import static org.lwjgl.sdl.SDLKeycode.SDLK_KP_MINUS;
import static org.lwjgl.sdl.SDLKeycode.SDLK_KP_MULTIPLY;
import static org.lwjgl.sdl.SDLKeycode.SDLK_KP_PERIOD;
import static org.lwjgl.sdl.SDLKeycode.SDLK_KP_PLUS;
import static org.lwjgl.sdl.SDLKeycode.SDLK_L;
import static org.lwjgl.sdl.SDLKeycode.SDLK_LALT;
import static org.lwjgl.sdl.SDLKeycode.SDLK_LCTRL;
import static org.lwjgl.sdl.SDLKeycode.SDLK_LEFT;
import static org.lwjgl.sdl.SDLKeycode.SDLK_LEFTBRACE;
import static org.lwjgl.sdl.SDLKeycode.SDLK_LEFTBRACKET;
import static org.lwjgl.sdl.SDLKeycode.SDLK_LEFTPAREN;
import static org.lwjgl.sdl.SDLKeycode.SDLK_LESS;
import static org.lwjgl.sdl.SDLKeycode.SDLK_LGUI;
import static org.lwjgl.sdl.SDLKeycode.SDLK_LSHIFT;
import static org.lwjgl.sdl.SDLKeycode.SDLK_M;
import static org.lwjgl.sdl.SDLKeycode.SDLK_MINUS;
import static org.lwjgl.sdl.SDLKeycode.SDLK_N;
import static org.lwjgl.sdl.SDLKeycode.SDLK_O;
import static org.lwjgl.sdl.SDLKeycode.SDLK_P;
import static org.lwjgl.sdl.SDLKeycode.SDLK_PAGEDOWN;
import static org.lwjgl.sdl.SDLKeycode.SDLK_PAGEUP;
import static org.lwjgl.sdl.SDLKeycode.SDLK_PAUSE;
import static org.lwjgl.sdl.SDLKeycode.SDLK_PERCENT;
import static org.lwjgl.sdl.SDLKeycode.SDLK_PERIOD;
import static org.lwjgl.sdl.SDLKeycode.SDLK_PIPE;
import static org.lwjgl.sdl.SDLKeycode.SDLK_PLUS;
import static org.lwjgl.sdl.SDLKeycode.SDLK_PLUSMINUS;
import static org.lwjgl.sdl.SDLKeycode.SDLK_PRINTSCREEN;
import static org.lwjgl.sdl.SDLKeycode.SDLK_Q;
import static org.lwjgl.sdl.SDLKeycode.SDLK_QUESTION;
import static org.lwjgl.sdl.SDLKeycode.SDLK_R;
import static org.lwjgl.sdl.SDLKeycode.SDLK_RALT;
import static org.lwjgl.sdl.SDLKeycode.SDLK_RCTRL;
import static org.lwjgl.sdl.SDLKeycode.SDLK_RETURN;
import static org.lwjgl.sdl.SDLKeycode.SDLK_RGUI;
import static org.lwjgl.sdl.SDLKeycode.SDLK_RIGHT;
import static org.lwjgl.sdl.SDLKeycode.SDLK_RIGHTBRACE;
import static org.lwjgl.sdl.SDLKeycode.SDLK_RIGHTBRACKET;
import static org.lwjgl.sdl.SDLKeycode.SDLK_RIGHTPAREN;
import static org.lwjgl.sdl.SDLKeycode.SDLK_RSHIFT;
import static org.lwjgl.sdl.SDLKeycode.SDLK_S;
import static org.lwjgl.sdl.SDLKeycode.SDLK_SCROLLLOCK;
import static org.lwjgl.sdl.SDLKeycode.SDLK_SEMICOLON;
import static org.lwjgl.sdl.SDLKeycode.SDLK_SLASH;
import static org.lwjgl.sdl.SDLKeycode.SDLK_SPACE;
import static org.lwjgl.sdl.SDLKeycode.SDLK_T;
import static org.lwjgl.sdl.SDLKeycode.SDLK_TAB;
import static org.lwjgl.sdl.SDLKeycode.SDLK_TILDE;
import static org.lwjgl.sdl.SDLKeycode.SDLK_U;
import static org.lwjgl.sdl.SDLKeycode.SDLK_UNDERSCORE;
import static org.lwjgl.sdl.SDLKeycode.SDLK_UP;
import static org.lwjgl.sdl.SDLKeycode.SDLK_V;
import static org.lwjgl.sdl.SDLKeycode.SDLK_W;
import static org.lwjgl.sdl.SDLKeycode.SDLK_X;
import static org.lwjgl.sdl.SDLKeycode.SDLK_Y;
import static org.lwjgl.sdl.SDLKeycode.SDLK_Z;
import static org.lwjgl.sdl.SDLKeycode.SDL_KMOD_ALT;
import static org.lwjgl.sdl.SDLKeycode.SDL_KMOD_CTRL;
import static org.lwjgl.sdl.SDLKeycode.SDL_KMOD_SHIFT;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_0;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_1;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_2;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_3;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_4;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_5;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_6;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_7;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_8;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_9;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_A;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_APOSTROPHE;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_B;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_BACKSLASH;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_BACKSPACE;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_C;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_COMMA;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_D;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_DELETE;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_DOWN;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_E;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_END;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_EQUALS;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_ESCAPE;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_F;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_F1;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_F10;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_F11;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_F12;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_F13;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_F14;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_F15;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_F16;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_F17;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_F18;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_F19;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_F2;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_F20;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_F21;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_F22;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_F23;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_F24;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_F3;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_F4;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_F5;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_F6;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_F7;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_F8;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_F9;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_G;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_GRAVE;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_H;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_HOME;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_I;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_INSERT;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_J;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_K;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_KP_0;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_KP_1;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_KP_2;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_KP_3;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_KP_4;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_KP_5;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_KP_6;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_KP_7;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_KP_8;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_KP_9;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_KP_DIVIDE;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_KP_ENTER;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_KP_EQUALS;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_KP_MINUS;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_KP_MULTIPLY;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_KP_PERIOD;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_KP_PLUS;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_L;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_LALT;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_LCTRL;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_LEFT;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_LEFTBRACKET;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_LGUI;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_LSHIFT;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_M;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_MINUS;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_N;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_O;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_P;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_PAGEDOWN;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_PAGEUP;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_PAUSE;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_PERIOD;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_PRINTSCREEN;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_Q;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_R;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_RALT;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_RCTRL;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_RETURN;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_RGUI;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_RIGHT;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_RIGHTBRACKET;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_RSHIFT;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_S;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_SCROLLLOCK;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_SEMICOLON;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_SLASH;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_SPACE;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_T;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_TAB;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_U;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_UP;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_V;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_W;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_X;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_Y;
import static org.lwjgl.sdl.SDLScancode.SDL_SCANCODE_Z;

public final class SdlInput {
  private SdlInput() { }

  public static void decodeMods(final SDL_KeyboardEvent key, final Set<InputMod> mods) {
    mods.clear();

    if((key.mod() & SDL_KMOD_CTRL) != 0) {
      mods.add(InputMod.CTRL);
    }

    if((key.mod() & SDL_KMOD_ALT) != 0) {
      mods.add(InputMod.ALT);
    }

    if((key.mod() & SDL_KMOD_SHIFT) != 0) {
      mods.add(InputMod.SHIFT);
    }
  }

  public static int getAxisCode(final InputAxis axis) {
    return switch(axis) {
      case LEFT_X -> SDL_GAMEPAD_AXIS_LEFTX;
      case LEFT_Y -> SDL_GAMEPAD_AXIS_LEFTY;
      case RIGHT_X -> SDL_GAMEPAD_AXIS_RIGHTX;
      case RIGHT_Y -> SDL_GAMEPAD_AXIS_RIGHTY;
      case LEFT_TRIGGER -> SDL_GAMEPAD_AXIS_LEFT_TRIGGER;
      case RIGHT_TRIGGER -> SDL_GAMEPAD_AXIS_RIGHT_TRIGGER;
    };
  }

  public static InputAxis getInputFromAxisCode(final int axisCode) {
    return switch(axisCode) {
      case SDL_GAMEPAD_AXIS_LEFTX -> LEFT_X;
      case SDL_GAMEPAD_AXIS_LEFTY -> LEFT_Y;
      case SDL_GAMEPAD_AXIS_RIGHTX -> RIGHT_X;
      case SDL_GAMEPAD_AXIS_RIGHTY -> RIGHT_Y;
      case SDL_GAMEPAD_AXIS_LEFT_TRIGGER -> InputAxis.LEFT_TRIGGER;
      case SDL_GAMEPAD_AXIS_RIGHT_TRIGGER -> InputAxis.RIGHT_TRIGGER;
      default -> throw new IllegalStateException("Invalid axis: " + axisCode);
    };
  }

  public static int getButtonCode(final InputButton button) {
    return switch(button) {
      case DPAD_UP -> SDL_GAMEPAD_BUTTON_DPAD_UP;
      case DPAD_DOWN -> SDL_GAMEPAD_BUTTON_DPAD_DOWN;
      case DPAD_LEFT -> SDL_GAMEPAD_BUTTON_DPAD_LEFT;
      case DPAD_RIGHT -> SDL_GAMEPAD_BUTTON_DPAD_RIGHT;
      case A -> SDL_GAMEPAD_BUTTON_SOUTH;
      case B -> SDL_GAMEPAD_BUTTON_EAST;
      case X -> SDL_GAMEPAD_BUTTON_WEST;
      case Y -> SDL_GAMEPAD_BUTTON_NORTH;
      case START -> SDL_GAMEPAD_BUTTON_START;
      case SELECT -> SDL_GAMEPAD_BUTTON_BACK;
      case LEFT_BUMPER -> SDL_GAMEPAD_BUTTON_LEFT_SHOULDER;
      case RIGHT_BUMPER -> SDL_GAMEPAD_BUTTON_RIGHT_SHOULDER;
      case LEFT_STICK -> SDL_GAMEPAD_BUTTON_LEFT_STICK;
      case RIGHT_STICK -> SDL_GAMEPAD_BUTTON_RIGHT_STICK;
    };
  }

  public static InputButton getInputFromButton(final int button) {
    return switch(button) {
      case SDL_GAMEPAD_BUTTON_DPAD_UP -> InputButton.DPAD_UP;
      case SDL_GAMEPAD_BUTTON_DPAD_DOWN -> InputButton.DPAD_DOWN;
      case SDL_GAMEPAD_BUTTON_DPAD_LEFT -> InputButton.DPAD_LEFT;
      case SDL_GAMEPAD_BUTTON_DPAD_RIGHT -> InputButton.DPAD_RIGHT;
      case SDL_GAMEPAD_BUTTON_SOUTH -> InputButton.A;
      case SDL_GAMEPAD_BUTTON_EAST -> InputButton.B;
      case SDL_GAMEPAD_BUTTON_WEST -> InputButton.X;
      case SDL_GAMEPAD_BUTTON_NORTH -> InputButton.Y;
      case SDL_GAMEPAD_BUTTON_START -> InputButton.START;
      case SDL_GAMEPAD_BUTTON_BACK -> InputButton.SELECT;
      case SDL_GAMEPAD_BUTTON_LEFT_SHOULDER -> InputButton.LEFT_BUMPER;
      case SDL_GAMEPAD_BUTTON_RIGHT_SHOULDER -> InputButton.RIGHT_BUMPER;
      case SDL_GAMEPAD_BUTTON_LEFT_STICK -> InputButton.LEFT_STICK;
      case SDL_GAMEPAD_BUTTON_RIGHT_STICK -> InputButton.RIGHT_STICK;
      default -> null;
    };
  }

  public static int getKeyCode(final InputKey key) {
    return switch(key) {
      case RETURN -> SDLK_RETURN;
      case ESCAPE -> SDLK_ESCAPE;
      case BACKSPACE -> SDLK_BACKSPACE;
      case TAB -> SDLK_TAB;
      case SPACE -> SDLK_SPACE;
      case EXCLAMATION -> SDLK_EXCLAIM;
      case DOUBLE_QUOTE -> SDLK_DBLAPOSTROPHE;
      case HASH -> SDLK_HASH;
      case DOLLAR -> SDLK_DOLLAR;
      case PERCENT -> SDLK_PERCENT;
      case AMPERSAND -> SDLK_AMPERSAND;
      case APOSTROPHE -> SDLK_APOSTROPHE;
      case LEFT_PARENTHESIS -> SDLK_LEFTPAREN;
      case RIGHT_PARENTHESIS -> SDLK_RIGHTPAREN;
      case ASTERISK -> SDLK_ASTERISK;
      case PLUS -> SDLK_PLUS;
      case COMMA -> SDLK_COMMA;
      case MINUS -> SDLK_MINUS;
      case PERIOD -> SDLK_PERIOD;
      case SLASH -> SDLK_SLASH;
      case NUM_0 -> SDLK_0;
      case NUM_1 -> SDLK_1;
      case NUM_2 -> SDLK_2;
      case NUM_3 -> SDLK_3;
      case NUM_4 -> SDLK_4;
      case NUM_5 -> SDLK_5;
      case NUM_6 -> SDLK_6;
      case NUM_7 -> SDLK_7;
      case NUM_8 -> SDLK_8;
      case NUM_9 -> SDLK_9;
      case COLON -> SDLK_COLON;
      case SEMICOLON -> SDLK_SEMICOLON;
      case LESS -> SDLK_LESS;
      case EQUALS -> SDLK_EQUALS;
      case GREATER -> SDLK_GREATER;
      case QUESTION -> SDLK_QUESTION;
      case AT -> SDLK_AT;
      case LEFT_BRACKET -> SDLK_LEFTBRACKET;
      case BACKSLASH -> SDLK_BACKSLASH;
      case RIGHT_BRACKET -> SDLK_RIGHTBRACKET;
      case CARET -> SDLK_CARET;
      case UNDERSCORE -> SDLK_UNDERSCORE;
      case GRAVE -> SDLK_GRAVE;
      case A -> SDLK_A;
      case B -> SDLK_B;
      case C -> SDLK_C;
      case D -> SDLK_D;
      case E -> SDLK_E;
      case F -> SDLK_F;
      case G -> SDLK_G;
      case H -> SDLK_H;
      case I -> SDLK_I;
      case J -> SDLK_J;
      case K -> SDLK_K;
      case L -> SDLK_L;
      case M -> SDLK_M;
      case N -> SDLK_N;
      case O -> SDLK_O;
      case P -> SDLK_P;
      case Q -> SDLK_Q;
      case R -> SDLK_R;
      case S -> SDLK_S;
      case T -> SDLK_T;
      case U -> SDLK_U;
      case V -> SDLK_V;
      case W -> SDLK_W;
      case X -> SDLK_X;
      case Y -> SDLK_Y;
      case Z -> SDLK_Z;
      case LEFT_BRACE -> SDLK_LEFTBRACE;
      case PIPE -> SDLK_PIPE;
      case RIGHT_BRACE -> SDLK_RIGHTBRACE;
      case TILDE -> SDLK_TILDE;
      case DELETE -> SDLK_DELETE;
      case PLUS_MINUS -> SDLK_PLUSMINUS;

      case F1 -> SDLK_F1;
      case F2 -> SDLK_F2;
      case F3 -> SDLK_F3;
      case F4 -> SDLK_F4;
      case F5 -> SDLK_F5;
      case F6 -> SDLK_F6;
      case F7 -> SDLK_F7;
      case F8 -> SDLK_F8;
      case F9 -> SDLK_F9;
      case F10 -> SDLK_F10;
      case F11 -> SDLK_F11;
      case F12 -> SDLK_F12;
      case PRINT_SCREEN -> SDLK_PRINTSCREEN;
      case SCROLL_LOCK -> SDLK_SCROLLLOCK;
      case PAUSE -> SDLK_PAUSE;
      case INSERT -> SDLK_INSERT;
      case HOME -> SDLK_HOME;
      case PAGE_UP -> SDLK_PAGEUP;
      case END -> SDLK_END;
      case PAGE_DOWN -> SDLK_PAGEDOWN;
      case RIGHT -> SDLK_RIGHT;
      case LEFT -> SDLK_LEFT;
      case DOWN -> SDLK_DOWN;
      case UP -> SDLK_UP;

      case KP_DIVIDE -> SDLK_KP_DIVIDE;
      case KP_MULTIPLY -> SDLK_KP_MULTIPLY;
      case KP_MINUS -> SDLK_KP_MINUS;
      case KP_PLUS -> SDLK_KP_PLUS;
      case KP_ENTER -> SDLK_KP_ENTER;
      case KP_1 -> SDLK_KP_1;
      case KP_2 -> SDLK_KP_2;
      case KP_3 -> SDLK_KP_3;
      case KP_4 -> SDLK_KP_4;
      case KP_5 -> SDLK_KP_5;
      case KP_6 -> SDLK_KP_6;
      case KP_7 -> SDLK_KP_7;
      case KP_8 -> SDLK_KP_8;
      case KP_9 -> SDLK_KP_9;
      case KP_0 -> SDLK_KP_0;
      case KP_PERIOD -> SDLK_KP_PERIOD;
      case KP_EQUALS -> SDLK_KP_EQUALS;
      case F13 -> SDLK_F13;
      case F14 -> SDLK_F14;
      case F15 -> SDLK_F15;
      case F16 -> SDLK_F16;
      case F17 -> SDLK_F17;
      case F18 -> SDLK_F18;
      case F19 -> SDLK_F19;
      case F20 -> SDLK_F20;
      case F21 -> SDLK_F21;
      case F22 -> SDLK_F22;
      case F23 -> SDLK_F23;
      case F24 -> SDLK_F24;

      case LEFT_CTRL -> SDLK_LCTRL;
      case LEFT_SHIFT -> SDLK_LSHIFT;
      case LEFT_ALT -> SDLK_LALT;
      case LEFT_GUI -> SDLK_LGUI;
      case RIGHT_CTRL -> SDLK_RCTRL;
      case RIGHT_SHIFT -> SDLK_RSHIFT;
      case RIGHT_ALT -> SDLK_RALT;
      case RIGHT_GUI -> SDLK_RGUI;
    };
  }

  public static InputKey getInputFromKeycode(final int key) {
    return switch(key) {
      case SDLK_RETURN -> InputKey.RETURN;
      case SDLK_ESCAPE -> InputKey.ESCAPE;
      case SDLK_BACKSPACE -> InputKey.BACKSPACE;
      case SDLK_TAB -> InputKey.TAB;
      case SDLK_SPACE -> InputKey.SPACE;
      case SDLK_EXCLAIM -> InputKey.EXCLAMATION;
      case SDLK_DBLAPOSTROPHE -> InputKey.DOUBLE_QUOTE;
      case SDLK_HASH -> InputKey.HASH;
      case SDLK_DOLLAR -> InputKey.DOLLAR;
      case SDLK_PERCENT -> InputKey.PERCENT;
      case SDLK_AMPERSAND -> InputKey.AMPERSAND;
      case SDLK_APOSTROPHE -> InputKey.APOSTROPHE;
      case SDLK_LEFTPAREN -> InputKey.LEFT_PARENTHESIS;
      case SDLK_RIGHTPAREN -> InputKey.RIGHT_PARENTHESIS;
      case SDLK_ASTERISK -> InputKey.ASTERISK;
      case SDLK_PLUS -> InputKey.PLUS;
      case SDLK_COMMA -> InputKey.COMMA;
      case SDLK_MINUS -> InputKey.MINUS;
      case SDLK_PERIOD -> InputKey.PERIOD;
      case SDLK_SLASH -> InputKey.SLASH;
      case SDLK_0 -> InputKey.NUM_0;
      case SDLK_1 -> InputKey.NUM_1;
      case SDLK_2 -> InputKey.NUM_2;
      case SDLK_3 -> InputKey.NUM_3;
      case SDLK_4 -> InputKey.NUM_4;
      case SDLK_5 -> InputKey.NUM_5;
      case SDLK_6 -> InputKey.NUM_6;
      case SDLK_7 -> InputKey.NUM_7;
      case SDLK_8 -> InputKey.NUM_8;
      case SDLK_9 -> InputKey.NUM_9;
      case SDLK_COLON -> InputKey.COLON;
      case SDLK_SEMICOLON -> InputKey.SEMICOLON;
      case SDLK_LESS -> InputKey.LESS;
      case SDLK_EQUALS -> InputKey.EQUALS;
      case SDLK_GREATER -> InputKey.GREATER;
      case SDLK_QUESTION -> InputKey.QUESTION;
      case SDLK_AT -> InputKey.AT;
      case SDLK_LEFTBRACKET -> InputKey.LEFT_BRACKET;
      case SDLK_BACKSLASH -> InputKey.BACKSLASH;
      case SDLK_RIGHTBRACKET -> InputKey.RIGHT_BRACKET;
      case SDLK_CARET -> InputKey.CARET;
      case SDLK_UNDERSCORE -> InputKey.UNDERSCORE;
      case SDLK_GRAVE -> InputKey.GRAVE;
      case SDLK_A -> InputKey.A;
      case SDLK_B -> InputKey.B;
      case SDLK_C -> InputKey.C;
      case SDLK_D -> InputKey.D;
      case SDLK_E -> InputKey.E;
      case SDLK_F -> InputKey.F;
      case SDLK_G -> InputKey.G;
      case SDLK_H -> InputKey.H;
      case SDLK_I -> InputKey.I;
      case SDLK_J -> InputKey.J;
      case SDLK_K -> InputKey.K;
      case SDLK_L -> InputKey.L;
      case SDLK_M -> InputKey.M;
      case SDLK_N -> InputKey.N;
      case SDLK_O -> InputKey.O;
      case SDLK_P -> InputKey.P;
      case SDLK_Q -> InputKey.Q;
      case SDLK_R -> InputKey.R;
      case SDLK_S -> InputKey.S;
      case SDLK_T -> InputKey.T;
      case SDLK_U -> InputKey.U;
      case SDLK_V -> InputKey.V;
      case SDLK_W -> InputKey.W;
      case SDLK_X -> InputKey.X;
      case SDLK_Y -> InputKey.Y;
      case SDLK_Z -> InputKey.Z;
      case SDLK_LEFTBRACE -> InputKey.LEFT_BRACE;
      case SDLK_PIPE -> InputKey.PIPE;
      case SDLK_RIGHTBRACE -> InputKey.RIGHT_BRACE;
      case SDLK_TILDE -> InputKey.TILDE;
      case SDLK_DELETE -> InputKey.DELETE;
      case SDLK_PLUSMINUS -> InputKey.PLUS_MINUS;
      case SDLK_F1 -> InputKey.F1;
      case SDLK_F2 -> InputKey.F2;
      case SDLK_F3 -> InputKey.F3;
      case SDLK_F4 -> InputKey.F4;
      case SDLK_F5 -> InputKey.F5;
      case SDLK_F6 -> InputKey.F6;
      case SDLK_F7 -> InputKey.F7;
      case SDLK_F8 -> InputKey.F8;
      case SDLK_F9 -> InputKey.F9;
      case SDLK_F10 -> InputKey.F10;
      case SDLK_F11 -> InputKey.F11;
      case SDLK_F12 -> InputKey.F12;
      case SDLK_PRINTSCREEN -> InputKey.PRINT_SCREEN;
      case SDLK_SCROLLLOCK -> InputKey.SCROLL_LOCK;
      case SDLK_PAUSE -> InputKey.PAUSE;
      case SDLK_INSERT -> InputKey.INSERT;
      case SDLK_HOME -> InputKey.HOME;
      case SDLK_PAGEUP -> InputKey.PAGE_UP;
      case SDLK_END -> InputKey.END;
      case SDLK_PAGEDOWN -> InputKey.PAGE_DOWN;
      case SDLK_RIGHT -> InputKey.RIGHT;
      case SDLK_LEFT -> InputKey.LEFT;
      case SDLK_DOWN -> InputKey.DOWN;
      case SDLK_UP -> InputKey.UP;
      case SDLK_KP_DIVIDE -> InputKey.KP_DIVIDE;
      case SDLK_KP_MULTIPLY -> InputKey.KP_MULTIPLY;
      case SDLK_KP_MINUS -> InputKey.KP_MINUS;
      case SDLK_KP_PLUS -> InputKey.KP_PLUS;
      case SDLK_KP_ENTER -> InputKey.KP_ENTER;
      case SDLK_KP_1 -> InputKey.KP_1;
      case SDLK_KP_2 -> InputKey.KP_2;
      case SDLK_KP_3 -> InputKey.KP_3;
      case SDLK_KP_4 -> InputKey.KP_4;
      case SDLK_KP_5 -> InputKey.KP_5;
      case SDLK_KP_6 -> InputKey.KP_6;
      case SDLK_KP_7 -> InputKey.KP_7;
      case SDLK_KP_8 -> InputKey.KP_8;
      case SDLK_KP_9 -> InputKey.KP_9;
      case SDLK_KP_0 -> InputKey.KP_0;
      case SDLK_KP_PERIOD -> InputKey.KP_PERIOD;
      case SDLK_KP_EQUALS -> InputKey.KP_EQUALS;
      case SDLK_F13 -> InputKey.F13;
      case SDLK_F14 -> InputKey.F14;
      case SDLK_F15 -> InputKey.F15;
      case SDLK_F16 -> InputKey.F16;
      case SDLK_F17 -> InputKey.F17;
      case SDLK_F18 -> InputKey.F18;
      case SDLK_F19 -> InputKey.F19;
      case SDLK_F20 -> InputKey.F20;
      case SDLK_F21 -> InputKey.F21;
      case SDLK_F22 -> InputKey.F22;
      case SDLK_F23 -> InputKey.F23;
      case SDLK_F24 -> InputKey.F24;

      case SDLK_LCTRL -> InputKey.LEFT_CTRL;
      case SDLK_LSHIFT -> InputKey.LEFT_SHIFT;
      case SDLK_LALT -> InputKey.LEFT_ALT;
      case SDLK_LGUI -> InputKey.LEFT_GUI;
      case SDLK_RCTRL -> InputKey.RIGHT_CTRL;
      case SDLK_RSHIFT -> InputKey.RIGHT_SHIFT;
      case SDLK_RALT -> InputKey.RIGHT_ALT;
      case SDLK_RGUI -> InputKey.RIGHT_GUI;

      default -> null;
    };
  }

  public static int getScanCode(final InputKey key) {
    return switch(key) {
      case A -> SDL_SCANCODE_A;
      case B -> SDL_SCANCODE_B;
      case C -> SDL_SCANCODE_C;
      case D -> SDL_SCANCODE_D;
      case E -> SDL_SCANCODE_E;
      case F -> SDL_SCANCODE_F;
      case G -> SDL_SCANCODE_G;
      case H -> SDL_SCANCODE_H;
      case I -> SDL_SCANCODE_I;
      case J -> SDL_SCANCODE_J;
      case K -> SDL_SCANCODE_K;
      case L -> SDL_SCANCODE_L;
      case M -> SDL_SCANCODE_M;
      case N -> SDL_SCANCODE_N;
      case O -> SDL_SCANCODE_O;
      case P -> SDL_SCANCODE_P;
      case Q -> SDL_SCANCODE_Q;
      case R -> SDL_SCANCODE_R;
      case S -> SDL_SCANCODE_S;
      case T -> SDL_SCANCODE_T;
      case U -> SDL_SCANCODE_U;
      case V -> SDL_SCANCODE_V;
      case W -> SDL_SCANCODE_W;
      case X -> SDL_SCANCODE_X;
      case Y -> SDL_SCANCODE_Y;
      case Z -> SDL_SCANCODE_Z;
      case NUM_1 -> SDL_SCANCODE_1;
      case NUM_2 -> SDL_SCANCODE_2;
      case NUM_3 -> SDL_SCANCODE_3;
      case NUM_4 -> SDL_SCANCODE_4;
      case NUM_5 -> SDL_SCANCODE_5;
      case NUM_6 -> SDL_SCANCODE_6;
      case NUM_7 -> SDL_SCANCODE_7;
      case NUM_8 -> SDL_SCANCODE_8;
      case NUM_9 -> SDL_SCANCODE_9;
      case NUM_0 -> SDL_SCANCODE_0;

      case RETURN -> SDL_SCANCODE_RETURN;
      case ESCAPE -> SDL_SCANCODE_ESCAPE;
      case BACKSPACE -> SDL_SCANCODE_BACKSPACE;
      case TAB -> SDL_SCANCODE_TAB;
      case SPACE -> SDL_SCANCODE_SPACE;
      case MINUS -> SDL_SCANCODE_MINUS;
      case EQUALS -> SDL_SCANCODE_EQUALS;
      case LEFT_BRACKET -> SDL_SCANCODE_LEFTBRACKET;
      case RIGHT_BRACKET -> SDL_SCANCODE_RIGHTBRACKET;
      case BACKSLASH -> SDL_SCANCODE_BACKSLASH;
      case SEMICOLON -> SDL_SCANCODE_SEMICOLON;
      case APOSTROPHE -> SDL_SCANCODE_APOSTROPHE;
      case GRAVE -> SDL_SCANCODE_GRAVE;
      case COMMA -> SDL_SCANCODE_COMMA;
      case PERIOD -> SDL_SCANCODE_PERIOD;
      case SLASH -> SDL_SCANCODE_SLASH;
      case F1 -> SDL_SCANCODE_F1;
      case F2 -> SDL_SCANCODE_F2;
      case F3 -> SDL_SCANCODE_F3;
      case F4 -> SDL_SCANCODE_F4;
      case F5 -> SDL_SCANCODE_F5;
      case F6 -> SDL_SCANCODE_F6;
      case F7 -> SDL_SCANCODE_F7;
      case F8 -> SDL_SCANCODE_F8;
      case F9 -> SDL_SCANCODE_F9;
      case F10 -> SDL_SCANCODE_F10;
      case F11 -> SDL_SCANCODE_F11;
      case F12 -> SDL_SCANCODE_F12;
      case InputKey.PRINT_SCREEN -> SDL_SCANCODE_PRINTSCREEN;
      case InputKey.SCROLL_LOCK -> SDL_SCANCODE_SCROLLLOCK;
      case InputKey.PAUSE -> SDL_SCANCODE_PAUSE;
      case InputKey.INSERT -> SDL_SCANCODE_INSERT;
      case InputKey.HOME -> SDL_SCANCODE_HOME;
      case InputKey.PAGE_UP -> SDL_SCANCODE_PAGEUP;
      case InputKey.DELETE -> SDL_SCANCODE_DELETE;
      case InputKey.END -> SDL_SCANCODE_END;
      case InputKey.PAGE_DOWN -> SDL_SCANCODE_PAGEDOWN;
      case InputKey.RIGHT -> SDL_SCANCODE_RIGHT;
      case InputKey.LEFT -> SDL_SCANCODE_LEFT;
      case InputKey.DOWN -> SDL_SCANCODE_DOWN;
      case InputKey.UP -> SDL_SCANCODE_UP;
      case InputKey.KP_DIVIDE -> SDL_SCANCODE_KP_DIVIDE;
      case InputKey.KP_MULTIPLY -> SDL_SCANCODE_KP_MULTIPLY;
      case InputKey.KP_MINUS -> SDL_SCANCODE_KP_MINUS;
      case InputKey.KP_PLUS -> SDL_SCANCODE_KP_PLUS;
      case InputKey.KP_ENTER -> SDL_SCANCODE_KP_ENTER;
      case InputKey.KP_1 -> SDL_SCANCODE_KP_1;
      case InputKey.KP_2 -> SDL_SCANCODE_KP_2;
      case InputKey.KP_3 -> SDL_SCANCODE_KP_3;
      case InputKey.KP_4 -> SDL_SCANCODE_KP_4;
      case InputKey.KP_5 -> SDL_SCANCODE_KP_5;
      case InputKey.KP_6 -> SDL_SCANCODE_KP_6;
      case InputKey.KP_7 -> SDL_SCANCODE_KP_7;
      case InputKey.KP_8 -> SDL_SCANCODE_KP_8;
      case InputKey.KP_9 -> SDL_SCANCODE_KP_9;
      case InputKey.KP_0 -> SDL_SCANCODE_KP_0;
      case InputKey.KP_PERIOD -> SDL_SCANCODE_KP_PERIOD;
      case InputKey.KP_EQUALS -> SDL_SCANCODE_KP_EQUALS;
      case InputKey.F13 -> SDL_SCANCODE_F13;
      case InputKey.F14 -> SDL_SCANCODE_F14;
      case InputKey.F15 -> SDL_SCANCODE_F15;
      case InputKey.F16 -> SDL_SCANCODE_F16;
      case InputKey.F17 -> SDL_SCANCODE_F17;
      case InputKey.F18 -> SDL_SCANCODE_F18;
      case InputKey.F19 -> SDL_SCANCODE_F19;
      case InputKey.F20 -> SDL_SCANCODE_F20;
      case InputKey.F21 -> SDL_SCANCODE_F21;
      case InputKey.F22 -> SDL_SCANCODE_F22;
      case InputKey.F23 -> SDL_SCANCODE_F23;
      case InputKey.F24 -> SDL_SCANCODE_F24;

      case LEFT_CTRL -> SDL_SCANCODE_LCTRL;
      case LEFT_SHIFT -> SDL_SCANCODE_LSHIFT;
      case LEFT_ALT -> SDL_SCANCODE_LALT;
      case LEFT_GUI -> SDL_SCANCODE_LGUI;
      case RIGHT_CTRL -> SDL_SCANCODE_RCTRL;
      case RIGHT_SHIFT -> SDL_SCANCODE_RSHIFT;
      case RIGHT_ALT -> SDL_SCANCODE_RALT;
      case RIGHT_GUI -> SDL_SCANCODE_RGUI;

      default -> throw new IllegalStateException("Not yet implemented: " + key); //TODO
    };
  }

  public static InputKey getInputKeyFromScanCode(final int key) {
    return switch(key) {
      case SDL_SCANCODE_A -> InputKey.A;
      case SDL_SCANCODE_B -> InputKey.B;
      case SDL_SCANCODE_C -> InputKey.C;
      case SDL_SCANCODE_D -> InputKey.D;
      case SDL_SCANCODE_E -> InputKey.E;
      case SDL_SCANCODE_F -> InputKey.F;
      case SDL_SCANCODE_G -> InputKey.G;
      case SDL_SCANCODE_H -> InputKey.H;
      case SDL_SCANCODE_I -> InputKey.I;
      case SDL_SCANCODE_J -> InputKey.J;
      case SDL_SCANCODE_K -> InputKey.K;
      case SDL_SCANCODE_L -> InputKey.L;
      case SDL_SCANCODE_M -> InputKey.M;
      case SDL_SCANCODE_N -> InputKey.N;
      case SDL_SCANCODE_O -> InputKey.O;
      case SDL_SCANCODE_P -> InputKey.P;
      case SDL_SCANCODE_Q -> InputKey.Q;
      case SDL_SCANCODE_R -> InputKey.R;
      case SDL_SCANCODE_S -> InputKey.S;
      case SDL_SCANCODE_T -> InputKey.T;
      case SDL_SCANCODE_U -> InputKey.U;
      case SDL_SCANCODE_V -> InputKey.V;
      case SDL_SCANCODE_W -> InputKey.W;
      case SDL_SCANCODE_X -> InputKey.X;
      case SDL_SCANCODE_Y -> InputKey.Y;
      case SDL_SCANCODE_Z -> InputKey.Z;
      case SDL_SCANCODE_1 -> InputKey.NUM_1;
      case SDL_SCANCODE_2 -> InputKey.NUM_2;
      case SDL_SCANCODE_3 -> InputKey.NUM_3;
      case SDL_SCANCODE_4 -> InputKey.NUM_4;
      case SDL_SCANCODE_5 -> InputKey.NUM_5;
      case SDL_SCANCODE_6 -> InputKey.NUM_6;
      case SDL_SCANCODE_7 -> InputKey.NUM_7;
      case SDL_SCANCODE_8 -> InputKey.NUM_8;
      case SDL_SCANCODE_9 -> InputKey.NUM_9;
      case SDL_SCANCODE_0 -> InputKey.NUM_0;

      case SDL_SCANCODE_RETURN -> InputKey.RETURN;
      case SDL_SCANCODE_ESCAPE -> InputKey.ESCAPE;
      case SDL_SCANCODE_BACKSPACE -> InputKey.BACKSPACE;
      case SDL_SCANCODE_TAB -> InputKey.TAB;
      case SDL_SCANCODE_SPACE -> InputKey.SPACE;
      case SDL_SCANCODE_MINUS -> InputKey.MINUS;
      case SDL_SCANCODE_EQUALS -> InputKey.EQUALS;
      case SDL_SCANCODE_LEFTBRACKET -> InputKey.LEFT_BRACKET;
      case SDL_SCANCODE_RIGHTBRACKET -> InputKey.RIGHT_BRACKET;
      case SDL_SCANCODE_BACKSLASH -> InputKey.BACKSLASH;
      case SDL_SCANCODE_SEMICOLON -> InputKey.SEMICOLON;
      case SDL_SCANCODE_APOSTROPHE -> InputKey.APOSTROPHE;
      case SDL_SCANCODE_GRAVE -> InputKey.GRAVE;
      case SDL_SCANCODE_COMMA -> InputKey.COMMA;
      case SDL_SCANCODE_PERIOD -> InputKey.PERIOD;
      case SDL_SCANCODE_SLASH -> InputKey.SLASH;
      case SDL_SCANCODE_F1 -> InputKey.F1;
      case SDL_SCANCODE_F2 -> InputKey.F2;
      case SDL_SCANCODE_F3 -> InputKey.F3;
      case SDL_SCANCODE_F4 -> InputKey.F4;
      case SDL_SCANCODE_F5 -> InputKey.F5;
      case SDL_SCANCODE_F6 -> InputKey.F6;
      case SDL_SCANCODE_F7 -> InputKey.F7;
      case SDL_SCANCODE_F8 -> InputKey.F8;
      case SDL_SCANCODE_F9 -> InputKey.F9;
      case SDL_SCANCODE_F10 -> InputKey.F10;
      case SDL_SCANCODE_F11 -> InputKey.F11;
      case SDL_SCANCODE_F12 -> InputKey.F12;
      case SDL_SCANCODE_PRINTSCREEN -> InputKey.PRINT_SCREEN;
      case SDL_SCANCODE_SCROLLLOCK -> InputKey.SCROLL_LOCK;
      case SDL_SCANCODE_PAUSE -> InputKey.PAUSE;
      case SDL_SCANCODE_INSERT -> InputKey.INSERT;
      case SDL_SCANCODE_HOME -> InputKey.HOME;
      case SDL_SCANCODE_PAGEUP -> InputKey.PAGE_UP;
      case SDL_SCANCODE_DELETE -> InputKey.DELETE;
      case SDL_SCANCODE_END -> InputKey.END;
      case SDL_SCANCODE_PAGEDOWN -> InputKey.PAGE_DOWN;
      case SDL_SCANCODE_RIGHT -> InputKey.RIGHT;
      case SDL_SCANCODE_LEFT -> InputKey.LEFT;
      case SDL_SCANCODE_DOWN -> InputKey.DOWN;
      case SDL_SCANCODE_UP -> InputKey.UP;
      case SDL_SCANCODE_KP_DIVIDE -> InputKey.KP_DIVIDE;
      case SDL_SCANCODE_KP_MULTIPLY -> InputKey.KP_MULTIPLY;
      case SDL_SCANCODE_KP_MINUS -> InputKey.KP_MINUS;
      case SDL_SCANCODE_KP_PLUS -> InputKey.KP_PLUS;
      case SDL_SCANCODE_KP_ENTER -> InputKey.KP_ENTER;
      case SDL_SCANCODE_KP_1 -> InputKey.KP_1;
      case SDL_SCANCODE_KP_2 -> InputKey.KP_2;
      case SDL_SCANCODE_KP_3 -> InputKey.KP_3;
      case SDL_SCANCODE_KP_4 -> InputKey.KP_4;
      case SDL_SCANCODE_KP_5 -> InputKey.KP_5;
      case SDL_SCANCODE_KP_6 -> InputKey.KP_6;
      case SDL_SCANCODE_KP_7 -> InputKey.KP_7;
      case SDL_SCANCODE_KP_8 -> InputKey.KP_8;
      case SDL_SCANCODE_KP_9 -> InputKey.KP_9;
      case SDL_SCANCODE_KP_0 -> InputKey.KP_0;
      case SDL_SCANCODE_KP_PERIOD -> InputKey.KP_PERIOD;
      case SDL_SCANCODE_KP_EQUALS -> InputKey.KP_EQUALS;
      case SDL_SCANCODE_F13 -> InputKey.F13;
      case SDL_SCANCODE_F14 -> InputKey.F14;
      case SDL_SCANCODE_F15 -> InputKey.F15;
      case SDL_SCANCODE_F16 -> InputKey.F16;
      case SDL_SCANCODE_F17 -> InputKey.F17;
      case SDL_SCANCODE_F18 -> InputKey.F18;
      case SDL_SCANCODE_F19 -> InputKey.F19;
      case SDL_SCANCODE_F20 -> InputKey.F20;
      case SDL_SCANCODE_F21 -> InputKey.F21;
      case SDL_SCANCODE_F22 -> InputKey.F22;
      case SDL_SCANCODE_F23 -> InputKey.F23;
      case SDL_SCANCODE_F24 -> InputKey.F24;

      case SDL_SCANCODE_LCTRL -> InputKey.LEFT_CTRL;
      case SDL_SCANCODE_LSHIFT -> InputKey.LEFT_SHIFT;
      case SDL_SCANCODE_LALT -> InputKey.LEFT_ALT;
      case SDL_SCANCODE_LGUI -> InputKey.LEFT_GUI;
      case SDL_SCANCODE_RCTRL -> InputKey.RIGHT_CTRL;
      case SDL_SCANCODE_RSHIFT -> InputKey.RIGHT_SHIFT;
      case SDL_SCANCODE_RALT -> InputKey.RIGHT_ALT;
      case SDL_SCANCODE_RGUI -> InputKey.RIGHT_GUI;

      default -> null;
    };
  }
}
