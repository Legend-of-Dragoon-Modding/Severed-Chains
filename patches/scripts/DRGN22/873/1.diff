Retail bug: chest code uses 4 overlapping textboxes. The 4 arrow animations aren't synchronized.
Passes a non-retail flag with the sobj index to 3 of 4 textbox call to disable arrows.
--- original
+++ modified
@@ -1439,9 +1439,11 @@
 gosub inl[:LABEL_103]
 mov 0x0, stor[22]
 gosub inl[:LABEL_103]
-call 198, 0x0, stor[0], 0x100, 0x3, 0x1, inl[:LABEL_149 + inl[:LABEL_149 + 0x0]]
-call 198, 0x1, stor[0], 0x100, 0x3, 0x1, inl[:LABEL_149 + inl[:LABEL_149 + 0x1]]
-call 198, 0x2, stor[0], 0x100, 0x3, 0x1, inl[:LABEL_149 + inl[:LABEL_149 + 0x2]]
# Four textboxes are initialized
+mov stor[0], inl[:INDEX_NO_ARROW]
+or 0x2000, inl[:INDEX_NO_ARROW]
+call 198, 0x0, inl[:INDEX_NO_ARROW], 0x100, 0x3, 0x1, inl[:LABEL_149 + inl[:LABEL_149 + 0x0]]
+call 198, 0x1, inl[:INDEX_NO_ARROW], 0x100, 0x3, 0x1, inl[:LABEL_149 + inl[:LABEL_149 + 0x1]]
+call 198, 0x2, inl[:INDEX_NO_ARROW], 0x100, 0x3, 0x1, inl[:LABEL_149 + inl[:LABEL_149 + 0x2]]
 call 198, 0x3, stor[0], 0x1111, 0x3, 0x1, inl[:LABEL_149 + inl[:LABEL_149 + 0x3]]
 LABEL_89:
 yield
@@ -1604,10 +1606,12 @@
 jmp inl[:LABEL_101]
 LABEL_101:
 while stor[20], inl[:LABEL_102]
# Textbox for currently selected digit is reloaded when changing value
-call 198, stor[22], stor[0], 0x100, 0x3, 0x1, inl[:LABEL_149[:LABEL_149[stor[22]]]]
+call 198, stor[22], inl[:INDEX_NO_ARROW], 0x100, 0x3, 0x1, inl[:LABEL_149[:LABEL_149[stor[22]]]]
 mov 0x8, stor[20]
 LABEL_102:
 return
+INDEX_NO_ARROW:
+data 0
 LABEL_103:
 mov var[6][23], stor[21]
 gosub_table stor[22], inl[:LABEL_104]
