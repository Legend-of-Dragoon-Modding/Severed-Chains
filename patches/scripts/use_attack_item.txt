entrypoint :DO_NOTHING
entrypoint :USE_ATTACK_ITEM
entrypoint :USE_HEALING_POTION
entrypoint :USE_DEPETRIFIER
entrypoint :USE_BODY_PURIFIER
entrypoint :USE_MIND_PURIFIER
entrypoint :USE_POWER_SPEED_UP
entrypoint :USE_MAGIC_SHIELD
entrypoint :USE_MATERIAL_SHIELD



DO_NOTHING:
rewind



USE_ATTACK_ITEM:
gosub inl[:LABEL_124] ; addr

; pull element colour out of element registry
call Battle::scriptGetBentStat, stor[0], ITEM_ELEMENT, reg[1] ; r1 = item element
call Scus94491BpeSegment_8002::scriptReadRegistryEntryVar, id[lod_core:elements], reg[1], 0, stor[8] ; s8 = packed element rgb

gosub inl[:THROW_ATTACK_ITEM] ; addr
call Battle::scriptTickDeffLoadingStage, 0x1 ; loadingStage
call Battle::scriptTickDeffLoadingStage, 0x2 ; loadingStage
call Battle::scriptTickDeffLoadingStage, 0x3 ; loadingStage
gosub inl[:LABEL_128] ; addr
gosub inl[:LABEL_436] ; addr
mov 0xa, stor[23] ; source, dest
wait stor[23] ; frames
return



USE_HEALING_POTION:
jmp inl[:LABEL_143] ; addr



USE_PURIFIER_STATUS:
data 0

; @param int s8 status effect cure bitset
; @param int s28 bent index
; @return int s9 bitset of status effects that were cleared
USE_PURIFIER:
mov stor[8], inl[:USE_PURIFIER_STATUS] ; back up statuses that are cured
gosub inl[:THROW_SHIELD_BUFF_PURIFIER] ; addr
call Battle::scriptGetBentSlot, stor[28], stor[9], 0x0 ; bentIndex, charOrBentSlot, mode
add 0x81, stor[9] ; amount, operand
mov var[45][stor[9]], stor[9] ; s9 = status
and 0xf, stor[9] ; mask status effect index
mov inl[:LABEL_122[stor[9]]], stor[9] ; s9 = status flag for status effect index
and inl[:USE_PURIFIER_STATUS], stor[9] ; mask status effect that this item cures
gosub inl[:CLEAR_BENT_STATUS] ; addr
return;



; @param int s28 bent index
CLEAR_MENU_BLOCK:
call Battle::scriptGetBentSlot, stor[28], stor[9], 0x0 ; bentIndex, charOrBentSlot, mode
mov 0x0, var[128 + stor[9]][6] ; source, dest



USE_DEPETRIFIER:
gosub inl[:USE_PURIFIER]

mov 20, stor[23] ; source, dest
wait stor[23] ; frames

gosub inl[:LABEL_128] ; addr
return



USE_BODY_PURIFIER:
gosub inl[:USE_PURIFIER]

mov 20, stor[23] ; source, dest
wait stor[23] ; frames

gosub inl[:SET_BENT_ANIMATION] ; addr
gosub inl[:LABEL_128] ; addr
return



USE_MIND_PURIFIER:
gosub inl[:USE_PURIFIER]

jmp_cmp ==, 0x0, stor[9], inl[:SKIP_CLEAR_MENU_BLOCK_EFFECT] ; nothing was cured
call Battle::scriptGetBentSlot, stor[28], stor[9], 0x0 ; bentIndex, charOrBentSlot, mode
jmp_cmp ==, 0x0, var[128 + stor[9]][6], inl[:LABEL_118] ; operand, left, right, addr
gosub inl[:LABEL_121] ; addr
SKIP_CLEAR_MENU_BLOCK_EFFECT:

mov 20, stor[23] ; source, dest
wait stor[23] ; frames

gosub inl[:SET_BENT_ANIMATION] ; addr
gosub inl[:CLEAR_MENU_BLOCK]
gosub inl[:LABEL_128] ; addr
return



USE_POWER_SPEED_UP:
gosub inl[:THROW_SHIELD_BUFF_PURIFIER] ; addr
call Battle::scriptTickDeffLoadingStage, 0x1 ; loadingStage
call Battle::scriptTickDeffLoadingStage, 0x2 ; loadingStage
call Battle::scriptTickDeffLoadingStage, 0x3 ; loadingStage
gosub inl[:LABEL_128] ; addr
gosub inl[:SET_BENT_ANIMATION] ; addr
return



USE_MAGIC_SHIELD:
gosub inl[:THROW_SHIELD_BUFF_PURIFIER] ; addr
call Battle::scriptGetBentSlot, stor[28], stor[8], 0x0 ; bentIndex, charOrBentSlot, mode
or 0xc, var[128 + stor[8]][7] ; right, left
call Scus94491BpeSegment::scriptPlaySound, 0x0, 0x14, 0x0, 0x0, 0x0, 0x0 ; soundFileIndex, soundIndex, unused1, unused2, initialDelay, repeatDelay
gosub inl[:ALLOCATE_MAGICAL_SHIELD_EFFECT] ; addr
mov 0x18, stor[23] ; source, dest
wait stor[23] ; frames
gosub inl[:LABEL_128] ; addr
return



USE_MATERIAL_SHIELD:
gosub inl[:THROW_SHIELD_BUFF_PURIFIER] ; addr
call Battle::scriptGetBentSlot, stor[28], stor[8], 0x0 ; bentIndex, charOrBentSlot, mode
or 0x3, var[128 + stor[8]][7] ; right, left
call Scus94491BpeSegment::scriptPlaySound, 0x0, 0x14, 0x0, 0x0, 0x0, 0x0 ; soundFileIndex, soundIndex, unused1, unused2, initialDelay, repeatDelay
gosub inl[:ALLOCATE_MATERIAL_SHIELD_EFFECT] ; addr
mov 0x18, stor[23] ; source, dest
wait stor[23] ; frames
gosub inl[:LABEL_128] ; addr
return



#include player_combat_script.txt
