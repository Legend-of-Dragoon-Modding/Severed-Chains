--- original
+++ modified
@@ -2960,16 +2960,16 @@
 mov var[34][0], stor[27]
 call 138, stor[27], 0x0
 mov var[34][1], stor[27]
+jmp_cmp ==, stor[27], 0xffffffff, inl[:SKIP_SET_BENT_INVIS_0]
 call 138, stor[27], 0x0
+SKIP_SET_BENT_INVIS_0:
 mov var[34][2], stor[27]
+jmp_cmp ==, stor[27], 0xffffffff, inl[:SKIP_SET_BENT_INVIS_1]
 call 138, stor[27], 0x0
+SKIP_SET_BENT_INVIS_1:
 mov var[36][0], stor[26]
 call 138, stor[26], 0x1
-mov var[34][2], stor[27]
-call 167, stor[27], stor[10]
-jmp_cmp ==, stor[10], 0x1, inl[:LABEL_186]
-mov var[34][1], stor[27]
-LABEL_186:
+gosub inl[:PREPARE_FINISHER_SLOT]
 call 139, stor[27], 0x1
 call 128, stor[26], 0xffffe570, 0x0, 0x0
 call 322, stor[27], 0x8
@@ -3124,3 +3124,19 @@
 add 0xa, stor[18]
 mov stor[10], var[45][stor[18]]
 jmp inl[:LABEL_193]
+PREPARE_FINISHER_SLOT:
+mov var[34][2], stor[27]
+jmp_cmp ==, stor[27], 0xffffffff, inl[:SKIP_FINISHER_CHECK_ON_SLOT_2]
+call 167, stor[27], stor[10]
+jmp_cmp ==, stor[10], inl[:TARGET_ID], inl[:FINISH]
+SKIP_FINISHER_CHECK_ON_SLOT_2:
+mov var[34][1], stor[27]
+jmp_cmp ==, stor[27], 0xffffffff, inl[:SKIP_FINISHER_CHECK_ON_SLOT_1]
+call 167, stor[27], stor[10]
+jmp_cmp ==, stor[10], inl[:TARGET_ID], inl[:FINISH]
+SKIP_FINISHER_CHECK_ON_SLOT_1:
+mov var[34][0], stor[27]
+FINISH:
+return
+TARGET_ID:
+data 0x1
